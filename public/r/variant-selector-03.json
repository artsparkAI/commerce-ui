{
  "name": "variant-selector-03",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-radio-group",
    "motion"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\";\nimport { Circle } from \"lucide-react\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface VariantItem {\n  id: string;\n  value: string;\n  label: string;\n}\n\nconst variants: VariantItem[] = [\n  { id: \"variant-a\", value: \"variant-a\", label: \"Sport\" },\n  { id: \"variant-b\", value: \"variant-b\", label: \"Pro\" },\n  { id: \"variant-c\", value: \"variant-c\", label: \"UltraQuite™\" },\n  { id: \"variant-d\", value: \"variant-d\", label: \"ExtremeSilence™\" },\n];\n\nconst VariantSelector_03 = ({ className }: { className?: string }) => {\n  const handleSelect = (value: string) => {\n    console.log(\"Selected variant:\", value);\n  };\n\n  const [activeTab, setActiveTab] = React.useState(\"variant-b\");\n  const [activeStyles, setActiveStyles] = React.useState({ left: 0, width: 0 });\n  const itemsRef = React.useRef<Map<string, HTMLLabelElement>>(new Map());\n\n  // Function to get the position and width of the active element\n  const getActiveStyles = () => {\n    const activeElement = itemsRef.current.get(activeTab);\n    if (!activeElement) return { left: 0, width: 0 };\n\n    const parent = activeElement.parentElement;\n    if (!parent) return { left: 0, width: 0 };\n\n    const parentRect = parent.getBoundingClientRect();\n    const activeRect = activeElement.getBoundingClientRect();\n\n    return {\n      left: activeRect.left - parentRect.left,\n      width: activeRect.width,\n    };\n  };\n\n  // Use useLayoutEffect to calculate initial position\n  React.useLayoutEffect(() => {\n    const styles = getActiveStyles();\n    setActiveStyles(styles);\n  }, [activeTab]);\n\n  return (\n    <fieldset className={cn(\"space-y-4\", className)}>\n      <legend>Select your Headphone variant:</legend>\n      <RadioGroupPrimitive.Root\n        className=\"relative flex gap-2\"\n        defaultValue=\"variant-b\"\n        onValueChange={(value) => {\n          handleSelect(value);\n          setActiveTab(value);\n        }}\n      >\n        <AnimatePresence initial={false}>\n          <motion.div\n            layoutId=\"variant-background\"\n            className=\"absolute inset-0 h-full rounded-lg border border-lime-300 bg-lime-300/30\"\n            animate={activeStyles}\n            transition={{\n              type: \"spring\",\n              bounce: 0.2,\n              duration: 0.6,\n            }}\n          />\n        </AnimatePresence>\n\n        {variants.map((variant) => (\n          <label\n            key={variant.id}\n            ref={(el) => {\n              if (el) {\n                itemsRef.current.set(variant.value, el);\n              } else {\n                itemsRef.current.delete(variant.value);\n              }\n            }}\n            className=\"relative flex cursor-pointer flex-col items-center gap-3 rounded-lg px-4 py-3 text-center shadow-sm shadow-black/5 outline-offset-2 transition-colors has-[[data-disabled]]:cursor-not-allowed has-[[data-disabled]]:opacity-50 has-[:focus-visible]:outline has-[:focus-visible]:outline-2 has-[:focus-visible]:outline-ring/70\"\n          >\n            <RadioGroupPrimitive.Item\n              value={variant.value}\n              className=\"sr-only after:absolute after:inset-0\"\n            >\n              <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n                <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n              </RadioGroupPrimitive.Indicator>\n            </RadioGroupPrimitive.Item>\n            <motion.p className=\"whitespace-nowrap text-sm font-medium leading-none text-foreground\">\n              {variant.label}\n            </motion.p>\n          </label>\n        ))}\n      </RadioGroupPrimitive.Root>\n    </fieldset>\n  );\n};\n\nexport default VariantSelector_03;\n",
      "path": "/components/commerce-ui/variant-selector/variant-selector-03.tsx",
      "target": "/components/commerce-ui/variant-selector-03.tsx"
    }
  ]
}