{
  "name": "cart-01-block",
  "type": "registry:block",
  "dependencies": [],
  "registryDependencies": [
    "button",
    "https://ui.stackzero.co/r/image-viewer-basic.json",
    "https://ui.stackzero.co/r/price-format-basic.json"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "\"use client\";\n\nimport ImageViewer from \"@/components/commerce-ui/image-viewer-basic\";\nimport PriceFormat from \"@/components/commerce-ui/price-format-basic\";\nimport { Button } from \"@/components/ui/button\";\n\n// Default logo placeholder\nconst DEFAULT_LOGO =\n  \"https://raw.githubusercontent.com/stackzero-labs/ui/refs/heads/main/public/placeholders/logo-placeholder.png\";\n\n// Product item interface\ninterface CartProduct {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  imageUrl: string;\n}\n\n// Cart component props\ninterface CartProps {\n  storeName?: string;\n  logoUrl?: string;\n  products?: CartProduct[];\n  subtotal?: number;\n  shippingCost?: number;\n  vatRate?: number;\n  currencyPrefix?: string;\n  onCheckout?: () => void;\n  onContinueShopping?: () => void;\n  onUpdateQuantity?: (productId: string, newQuantity: number) => void;\n  onRemoveProduct?: (productId: string) => void;\n}\n\n// Default products for demo purposes\nconst DEFAULT_PRODUCTS: CartProduct[] = [\n  {\n    id: \"prod-1\",\n    name: \"Wireless Headphones\",\n    price: 98.96,\n    quantity: 1,\n    imageUrl:\n      \"https://raw.githubusercontent.com/stackzero-labs/ui/refs/heads/main/public/placeholders/headphone-1.jpg\",\n  },\n  {\n    id: \"prod-2\",\n    name: \"Smart Watch\",\n    price: 129.99,\n    quantity: 2,\n    imageUrl:\n      \"https://raw.githubusercontent.com/stackzero-labs/ui/refs/heads/main/public/placeholders/watch-1.jpg\",\n  },\n];\n\nfunction Cart_01({\n  storeName = \"TechGadgets\",\n  logoUrl = DEFAULT_LOGO,\n  products = DEFAULT_PRODUCTS,\n  subtotal = 358.94, // This would typically be calculated from products\n  shippingCost = 15.99,\n  vatRate = 0.2, // 20% VAT\n  currencyPrefix = \"$\",\n  onCheckout = () => {},\n  onContinueShopping = () => {},\n  onUpdateQuantity = () => {},\n  onRemoveProduct = () => {},\n}: CartProps = {}) {\n  // Calculate VAT and total\n  const vatAmount = subtotal * vatRate;\n  const totalAmount = subtotal + shippingCost + vatAmount;\n\n  return (\n    <div className=\"w-full max-w-4xl rounded-xl border border-gray-200 bg-white shadow-sm dark:border-gray-800 dark:bg-gray-900\">\n      {/* Store Header */}\n      <div className=\"flex items-center space-x-4 rounded-t-xl bg-gradient-to-r from-blue-600 to-violet-600 p-6 text-white\">\n        <div className=\"h-12 w-12 overflow-hidden rounded-full bg-white p-1\">\n          <img\n            src={logoUrl}\n            alt={`${storeName} logo`}\n            width={48}\n            height={48}\n            className=\"h-full w-full object-contain\"\n          />\n        </div>\n        <h1 className=\"text-2xl font-bold\">{storeName}</h1>\n      </div>\n\n      {/* Cart Items */}\n      <div className=\"divide-y divide-gray-200 dark:divide-gray-800\">\n        {products.map((product) => (\n          <div key={product.id} className=\"flex items-center p-6\">\n            <div className=\"mr-4 h-20 w-20 flex-shrink-0 overflow-hidden rounded-md bg-gray-100 dark:bg-gray-800\">\n              <ImageViewer\n                imageUrl={product.imageUrl}\n                classNameThumbnailViewer=\"h-full w-full object-contain\"\n              />\n            </div>\n\n            <div className=\"flex-1\">\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-100\">\n                {product.name}\n              </h3>\n              <PriceFormat\n                prefix={currencyPrefix}\n                value={product.price}\n                className=\"mt-1 text-gray-600 dark:text-gray-400\"\n              />\n            </div>\n\n            <div className=\"flex w-24 items-center justify-center\">\n              <button\n                onClick={() =>\n                  product.quantity > 1 &&\n                  onUpdateQuantity(product.id, product.quantity - 1)\n                }\n                className=\"h-8 w-8 rounded-full border border-gray-300 text-gray-600 hover:bg-gray-100 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-800\"\n              >\n                -\n              </button>\n              <span className=\"mx-2 w-8 text-center text-gray-900 dark:text-gray-100\">\n                {product.quantity}\n              </span>\n              <button\n                onClick={() =>\n                  onUpdateQuantity(product.id, product.quantity + 1)\n                }\n                className=\"h-8 w-8 rounded-full border border-gray-300 text-gray-600 hover:bg-gray-100 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-800\"\n              >\n                +\n              </button>\n            </div>\n\n            <div className=\"ml-6 w-24 text-right\">\n              <PriceFormat\n                prefix={currencyPrefix}\n                value={product.price * product.quantity}\n                className=\"font-medium text-gray-900 dark:text-gray-100\"\n              />\n            </div>\n\n            <button\n              onClick={() => onRemoveProduct(product.id)}\n              className=\"ml-4 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n            >\n              <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n            </button>\n          </div>\n        ))}\n      </div>\n\n      {/* Summary Section */}\n      <div className=\"bg-gray-50 p-6 dark:bg-gray-800/50\">\n        <h2 className=\"mb-4 text-xl font-bold text-gray-900 dark:text-gray-100\">\n          Order Summary\n        </h2>\n\n        <div className=\"space-y-3\">\n          <div className=\"flex justify-between text-gray-600 dark:text-gray-400\">\n            <span>Subtotal</span>\n            <PriceFormat prefix={currencyPrefix} value={subtotal} />\n          </div>\n\n          <div className=\"flex justify-between text-gray-600 dark:text-gray-400\">\n            <span>Shipping</span>\n            <PriceFormat prefix={currencyPrefix} value={shippingCost} />\n          </div>\n\n          <div className=\"flex justify-between text-gray-600 dark:text-gray-400\">\n            <span>VAT ({(vatRate * 100).toFixed(0)}%)</span>\n            <PriceFormat prefix={currencyPrefix} value={vatAmount} />\n          </div>\n\n          <div className=\"border-t border-gray-200 pt-3 dark:border-gray-700\">\n            <div className=\"flex justify-between font-bold text-gray-900 dark:text-gray-100\">\n              <span>Total</span>\n              <PriceFormat\n                prefix={currencyPrefix}\n                value={totalAmount}\n                className=\"text-xl text-blue-600 dark:text-blue-400\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-6 space-y-3\">\n          <Button\n            onClick={onCheckout}\n            className=\"w-full bg-gradient-to-r from-blue-600 to-violet-600 text-white transition-all hover:from-blue-700 hover:to-violet-700\"\n          >\n            Proceed to Checkout\n          </Button>\n\n          <Button\n            variant=\"outline\"\n            onClick={onContinueShopping}\n            className=\"w-full border-gray-300 bg-white text-gray-800 transition-all hover:border-blue-500 hover:bg-blue-50 hover:text-blue-700 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-200 dark:hover:border-blue-500 dark:hover:bg-gray-700\"\n          >\n            Continue Shopping\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Cart_01;\nexport type { CartProps, CartProduct };\n",
      "path": "/components/commerce-ui/blocks/carts/cart-01.tsx",
      "target": "/components/commerce-ui/cart-01.tsx"
    }
  ]
}