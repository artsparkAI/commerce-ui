{
  "name": "product-variant-01-block-ex",
  "type": "registry:example",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "https://ui.stackzero.co/r/product-variant-01-block.json"
  ],
  "files": [
    {
      "type": "registry:example",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport ProductVariant_01, {\n  VariantItem,\n  VariantSelectionPayload,\n} from \"./product-variants-01\";\n\n// Example product data\nconst EXAMPLE_VARIANTS: VariantItem[] = [\n  {\n    id: \"color-red\",\n    label: \"Ruby Red\",\n    value: \"color-red\",\n    price: 249.99,\n    imageUrl:\n      \"https://raw.githubusercontent.com/stackzero-labs/ui/refs/heads/main/public/placeholders/headphone-red.jpg\",\n  },\n  {\n    id: \"color-black\",\n    label: \"Stealth Black\",\n    value: \"color-black\",\n    price: 229.99,\n    imageUrl:\n      \"https://raw.githubusercontent.com/stackzero-labs/ui/refs/heads/main/public/placeholders/headphone-black.jpg\",\n  },\n  {\n    id: \"color-blue\",\n    label: \"Ocean Blue\",\n    value: \"color-blue\",\n    price: 239.99,\n    imageUrl:\n      \"https://raw.githubusercontent.com/stackzero-labs/ui/refs/heads/main/public/placeholders/headphone-blue.jpg\",\n  },\n];\n\nexport default function ProductVariantExample() {\n  // State for controlled usage\n  const [selectedVariant, setSelectedVariant] = useState<string>(\n    EXAMPLE_VARIANTS[0].value\n  );\n  const [quantity, setQuantity] = useState<number>(1);\n  const [cartItems, setCartItems] = useState<VariantSelectionPayload[]>([]);\n  const [notifications, setNotifications] = useState<string[]>([]);\n\n  // Handlers for adding to cart and buying\n  const handleAddToCart = (payload: VariantSelectionPayload) => {\n    setCartItems((prev) => [...prev, payload]);\n    setNotifications((prev) => [\n      `Added ${payload.quantity} ${payload.variantLabel} to cart`,\n      ...prev,\n    ]);\n  };\n\n  const handleBuyNow = (payload: VariantSelectionPayload) => {\n    setNotifications((prev) => [\n      `Purchased ${payload.quantity} ${payload.variantLabel} for $${payload.totalPrice.toFixed(2)}`,\n      ...prev,\n    ]);\n  };\n\n  // Example of error state toggle\n  const [showErrorState, setShowErrorState] = useState(false);\n  const [showLoadingState, setShowLoadingState] = useState(false);\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"mb-8 text-2xl font-bold\">Product Variant Example</h1>\n\n      <div className=\"mb-6 flex flex-wrap gap-4\">\n        <button\n          onClick={() => setShowErrorState(!showErrorState)}\n          className=\"rounded-md bg-amber-100 px-4 py-2 text-amber-800 hover:bg-amber-200\"\n        >\n          Toggle Error State\n        </button>\n\n        <button\n          onClick={() => setShowLoadingState(!showLoadingState)}\n          className=\"rounded-md bg-blue-100 px-4 py-2 text-blue-800 hover:bg-blue-200\"\n        >\n          Toggle Loading State\n        </button>\n      </div>\n\n      {/* ProductVariant_01 Component with Controlled Props */}\n      <ProductVariant_01\n        title=\"Premium Noise-Cancelling Headphones\"\n        description=\"Experience exceptional sound quality with our top-of-the-line noise-cancelling headphones, perfect for music lovers and professionals alike.\"\n        badge=\"Limited Edition\"\n        variants={EXAMPLE_VARIANTS}\n        variantLabel=\"Color\"\n        basePrice={229.99}\n        shippingInfo=\"Free 2-day shipping\"\n        // Controlled state\n        selectedVariant={selectedVariant}\n        onVariantChange={setSelectedVariant}\n        quantity={quantity}\n        onQuantityChange={setQuantity}\n        // Callbacks\n        onAddToCart={handleAddToCart}\n        onBuyNow={handleBuyNow}\n        // State examples\n        isLoading={showLoadingState}\n        errorMessage={\n          showErrorState ? \"There was an error loading the product data\" : null\n        }\n        // Availability\n        isInStock={true}\n        availableQuantity={20}\n      />\n\n      {/* Notifications Panel */}\n      {notifications.length > 0 && (\n        <div className=\"mt-8\">\n          <h2 className=\"mb-4 text-xl font-semibold\">Activity Log</h2>\n          <div className=\"rounded-lg border border-gray-200 bg-white p-4 dark:border-gray-700 dark:bg-gray-800\">\n            <ul className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n              {notifications.map((notification, index) => (\n                <li key={index} className=\"py-3\">\n                  <div className=\"flex items-center\">\n                    <div className=\"mr-2 h-2 w-2 rounded-full bg-green-500\"></div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n                      {notification}\n                    </p>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n\n      {/* Cart Contents */}\n      {cartItems.length > 0 && (\n        <div className=\"mt-8\">\n          <h2 className=\"mb-4 text-xl font-semibold\">Cart Contents</h2>\n          <div className=\"rounded-lg border border-gray-200 bg-white p-4 dark:border-gray-700 dark:bg-gray-800\">\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead>\n                <tr>\n                  <th className=\"px-4 py-2 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                    Item\n                  </th>\n                  <th className=\"px-4 py-2 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                    Quantity\n                  </th>\n                  <th className=\"px-4 py-2 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                    Price\n                  </th>\n                  <th className=\"px-4 py-2 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                    Total\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                {cartItems.map((item, index) => (\n                  <tr key={index}>\n                    <td className=\"px-4 py-2 text-sm font-medium whitespace-nowrap text-gray-900 dark:text-white\">\n                      {item.variantLabel}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm whitespace-nowrap text-gray-500 dark:text-gray-400\">\n                      {item.quantity}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm whitespace-nowrap text-gray-500 dark:text-gray-400\">\n                      ${item.price.toFixed(2)}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm font-medium whitespace-nowrap text-gray-900 dark:text-white\">\n                      ${item.totalPrice.toFixed(2)}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n              <tfoot>\n                <tr>\n                  <td\n                    colSpan={3}\n                    className=\"px-4 py-2 text-right text-sm font-medium text-gray-900 dark:text-white\"\n                  >\n                    Total:\n                  </td>\n                  <td className=\"px-4 py-2 text-sm font-medium whitespace-nowrap text-gray-900 dark:text-white\">\n                    $\n                    {cartItems\n                      .reduce((sum, item) => sum + item.totalPrice, 0)\n                      .toFixed(2)}\n                  </td>\n                </tr>\n              </tfoot>\n            </table>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n",
      "path": "/components/commerce-ui/blocks/product-variants/product-variants-01-ex.tsx",
      "target": "/components/commerce-ui/product-variants-01-ex.tsx"
    }
  ]
}